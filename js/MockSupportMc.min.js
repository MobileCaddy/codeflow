/* Copyright 2018 MobileCaddy Ltd */

var SupportMc={},device={uuid:"c86d3e94574debug",name:"localDev",cordova:"",platform:"",version:"",model:""};SupportMc.constants={version:"001",applicationName:"MAP-0012001",bootstrapPage:"/apex/MobileCaddyBootstrap001_mc",system_data_soup:"syncLib_system_data",offerLanguageChoice:!0},SupportMc.variables={creds:null,chosenLanguage:""},SupportMc.singleton=function(){function e(){document.addEventListener("backbutton",function(){c("User pressed back button. Ignoring.")},!0),SupportMc.singleton.displaySelectedLanguage(function(){navigator.userLanguage?baseLang=navigator.userLanguage.substring(0,2).toLowerCase():baseLang=navigator.language.substring(0,2).toLowerCase();return c("User default language = "+baseLang),baseLang}())}function c(e){console.log(e)}return{addEventListeners:function(){document.addEventListener("deviceready",e,!1)},startUp:function(s){var a,t;force.init({appId:CONNECTED_APP_ID,apiVersion:"v30.0",loginUrl:SF_LOGIN_URL,tokenStore:localStorage,oauthRedirectURL:"http://localhost:3030/oauthcallback.html",proxyURL:CORS_PROXY_URL}),c("startUp calling newInstallCheck"),a=function(e){if(c("newInstall success callback -> "+e),e)if(c("new install detected"),cordova.require("salesforce/util/bootstrap").deviceIsOnline()){c("device is online");var a=function(e){c("authenticate success callback with creds = "+JSON.stringify(e)),function(e){for(var a in e)c(a+" has value = "+e[a])}(e),SupportMc.variables.creds=e;var a=90===Math.abs(window.orientation)?"landscape":"portrait",t="";navigator&&navigator.connection&&(t=navigator.connection.type);var n,o,r=(new Date).getTime(),i=SupportMc.variables.creds.instanceUrl+SupportMc.constants.bootstrapPage+"?deviceUuid="+device.uuid+"&deviceName="+device.name+"&deviceCordova="+device.cordova+"&devicePlatform="+device.platform+"&deviceVersion="+device.version+"&deviceModel="+device.model+"&appRecordName="+SupportMc.constants.applicationName+"&buildVersion="+SupportMc.constants.version+"&orientation="+a+"&viewportWidth="+$j(window).width()+"&viewportHeight="+$j(window).height()+"&sessionType=New Install&connType="+t+"&millsFromEpoch="+r+"&userLanguage="+SupportMc.variables.chosenLanguage;n=function(){!function(e,a){c("Populating app data soup");var t=[];t.push({Name:"applicationName",CurrentValue:SupportMc.constants.applicationName}),t.push({Name:"userId",CurrentValue:SupportMc.variables.creds.userId}),t.push({Name:"buildStatus",CurrentValue:"Initial"}),t.push({Name:"buildVersion",CurrentValue:"001"}),t.push({Name:"buildName",CurrentValue:mobileCaddy.buildName}),t.push({Name:"buildOS",CurrentValue:"Android"}),t.push({Name:"deviceUuid",CurrentValue:device.uuid}),cordova.require("com.salesforce.plugin.smartstore").upsertSoupEntries("appSoup",t,e,a)}(function(e){for(var a=0;a<e.length;a++)for(var t in e[a])console.log("field "+t+" has value "+e[a][t]);c("Redirecting to: "+i+", not really, we're local");var n=mobileCaddy.require("mobileCaddy/startup");USE_FORCETK?force.request({method:"POST",path:"/services/apexrest/mobilecaddy1/codeflowUtils001",contentType:"application/json",data:{buildVersion:SupportMc.constants.version,buildName:mobileCaddy.buildName,buildOS:"Android",deviceUuid:device.uuid,overrideUserId:force.getUserId(),startPageControllerVersion:mobileCaddy.START_PAGE_CONTROLLER_VSN}},function(e){console.info("response -> "+JSON.stringify(e));n.startup(s)},function(e){"NOT_FOUND"==e[0].errorCode?n.startup(s):(console.error("err",e),error())}):n.startup(s)},function(e){c("failed to populate app data soup with error = "+e)})},o=function(e){c("failed to create app data soup with error = "+e)},c("creating app data soup"),cordova.require("com.salesforce.plugin.smartstore").registerSoup("appSoup",[{path:"Name",type:"string"},{path:"teststring",type:"string"},{path:"testinteger",type:"string"},{path:"CurrentValue",type:"string"},{path:"NewValue",type:"string"},{path:"testno",type:"integer"}],n,o)};if(!0===USE_FORCETK){var t={instanceUrl:"http://dummy.dumdum.com"};force.isLoggedIn()?(console.info("forcejs - Already logged in"),a(t)):force.login(function(){console.info("Salesforce login succeeded"),a(t)},function(e){console.info(e),alert("Salesforce login failed")})}else cordova.require("salesforce/plugin/oauth").authenticate(function(e){a(e)},function(e){c("authenticate call failed with error = "+e),$j("#errorMessage").append(e),$j("#retryStartupButton").show(),$j.mobile.loading("hide")})}else $j("#errorMessage").text("Device must be online to install MobileCaddy"),$j("#retryStartupButton").show(),$j.mobile.loading("hide");else mobileCaddy.require("mobileCaddy/startup").startup(s)},t=function(e){c("newInstall check error = "+e)},cordova.require("com.salesforce.plugin.smartstore").soupExists("appSoup",function(e){a(!e)},function(e){t(e)})},chooseLanguage:function(){c("In translate text with chosen language = "+SupportMc.variables.chosenLanguage),$j.each($j(".mc_trans"),function(e,a){var t=a.innerText;c("translating for key = "+t);var n=TranslationsMc.translations[SupportMc.variables.chosenLanguage][t];a.innerText=decodeURIComponent(n)}),$j(".mc_trans").removeClass("mc_trans"),SupportMc.singleton.startUp()},selectLanguage:function(){var e=$j("#languageList li").size();c("language list length = "+e),0===e?(c("Setting up list"),$j.each(LangMc.constants.languageList,function(e,a){var t=decodeURIComponent(a.codedDesc);$j("<li></li>").hide().append('<a href="#" onclick="SupportMc.singleton.displaySelectedLanguage(\''+a.isoCode+'\');"><img src="images/'+a.isoCode+'.png" alt="'+t+'" class="ui-li-icon">'+t+"</a>").appendTo("#languageList").show()})):c("List already created"),$j.mobile.changePage("#languagePage")},displaySelectedLanguage:function(n){SupportMc.variables.chosenLanguage=n,$j.mobile.changePage("#splashPage");var o=!1;$j("#languageButton").empty(),$j.each(LangMc.constants.languageList,function(e,a){if(a.isoCode==n){var t=decodeURIComponent(a.codedDesc);return $j("#languageButton").append('<a class="pad-button" id="lang=button" href="#" data-iconpos="right" data-icon="'+n+'" data-role="button" onclick="SupportMc.singleton.selectLanguage();">'+t+"</a>").trigger("create"),o=!0,!1}}),o||(c("Language not found so defaulting to English"),$j("#selectedLanguage").append('<a href="#" data-iconpos="right" data-icon="en" data-role="button" onclick="SupportMc.singleton.selectLanguage();">English</a>').trigger("create"))}}}();