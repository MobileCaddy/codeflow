/* Copyright 2015 MobileCaddy Ltd */
var SupportMc={},device={uuid:"c86d3e94574debug",name:"localDev",cordova:"",platform:"",version:"",model:""};SupportMc.constants={version:"001",applicationName:"MAP-0012001",bootstrapPage:"/apex/MobileCaddyBootstrap001_mc",system_data_soup:"syncLib_system_data",offerLanguageChoice:!0},SupportMc.variables={creds:null,chosenLanguage:""},SupportMc.singleton=function(){function a(){document.addEventListener("backbutton",function(){g("User pressed back button. Ignoring.")},!0),SupportMc.singleton.displaySelectedLanguage(b())}function b(){return baseLang=navigator.userLanguage?navigator.userLanguage.substring(0,2).toLowerCase():navigator.language.substring(0,2).toLowerCase(),g("User default language = "+baseLang),baseLang}function c(){g("In translate text with chosen language = "+SupportMc.variables.chosenLanguage),$j.each($j(".mc_trans"),function(a,b){var c=b.innerText;g("translating for key = "+c);var d=TranslationsMc.translations[SupportMc.variables.chosenLanguage][c];b.innerText=decodeURIComponent(d)}),$j(".mc_trans").removeClass("mc_trans")}function d(){return 90===Math.abs(window.orientation)?"landscape":"portrait"}function e(a,b){cordova.require("com.salesforce.plugin.smartstore").soupExists("appSoup",function(b){a(!b)},function(a){b(a)})}function f(a){for(var b in a)g(b+" has value = "+a[b])}function g(a){console.log(a)}function h(a,b){g("creating app data soup");var c=[{path:"Name",type:"string"},{path:"teststring",type:"string"},{path:"testinteger",type:"string"},{path:"CurrentValue",type:"string"},{path:"NewValue",type:"string"},{path:"testno",type:"integer"}];cordova.require("com.salesforce.plugin.smartstore").registerSoup("appSoup",c,a,b)}function i(a,b){g("Populating app data soup");var c=[];c.push({Name:"applicationName",CurrentValue:SupportMc.constants.applicationName}),c.push({Name:"userId",CurrentValue:SupportMc.variables.creds.userId}),c.push({Name:"buildStatus",CurrentValue:"Initial"}),c.push({Name:"buildVersion",CurrentValue:"001"}),c.push({Name:"buildName",CurrentValue:mobileCaddy.buildName}),c.push({Name:"buildOS",CurrentValue:"Android"}),c.push({Name:"deviceUuid",CurrentValue:device.uuid}),cordova.require("com.salesforce.plugin.smartstore").upsertSoupEntries("appSoup",c,a,b)}return{addEventListeners:function(){document.addEventListener("deviceready",a,!1)},startUp:function(a){force.init({appId:CONNECTED_APP_ID,apiVersion:"v30.0",loginUrl:SF_LOGIN_URL,tokenStore:localStorage,oauthRedirectURL:"http://localhost:3030/oauthcallback.html",proxyURL:CORS_PROXY_URL}),g("startUp calling newInstallCheck"),e(function(b){if(g("newInstall success callback -> "+b),b)if(g("new install detected"),cordova.require("salesforce/util/bootstrap").deviceIsOnline()){g("device is online");var c=function(b){g("authenticate success callback with creds = "+JSON.stringify(b)),f(b),SupportMc.variables.creds=b;var c=d(),e="";navigator&&navigator.connection&&(e=navigator.connection.type);var j=(new Date).getTime(),k=SupportMc.variables.creds.instanceUrl+SupportMc.constants.bootstrapPage+"?deviceUuid="+device.uuid+"&deviceName="+device.name+"&deviceCordova="+device.cordova+"&devicePlatform="+device.platform+"&deviceVersion="+device.version+"&deviceModel="+device.model+"&appRecordName="+SupportMc.constants.applicationName+"&buildVersion="+SupportMc.constants.version+"&orientation="+c+"&viewportWidth="+$j(window).width()+"&viewportHeight="+$j(window).height()+"&sessionType=New Install&connType="+e+"&millsFromEpoch="+j+"&userLanguage="+SupportMc.variables.chosenLanguage;h(function(){i(function(b){for(var c=0;c<b.length;c++)for(var d in b[c])console.log("field "+d+" has value "+b[c][d]);g("Redirecting to: "+k+", not really, we're local");var e=mobileCaddy.require("mobileCaddy/startup");USE_FORCETK?force.request({method:"POST",path:"/services/apexrest/mc_package_002/codeflowUtils001",contentType:"application/json",data:{buildVersion:SupportMc.constants.version,buildName:mobileCaddy.buildName,buildOS:"Android",deviceUuid:device.uuid,overrideUserId:force.getUserId(),startPageControllerVersion:mobileCaddy.START_PAGE_CONTROLLER_VSN}},function(b){console.info("response -> "+JSON.stringify(b));var c={};c.status="200",e.startup(a)},function(b){"NOT_FOUND"==b[0].errorCode?e.startup(a):(console.error("err",b),error())}):e.startup(a)},function(a){g("failed to populate app data soup with error = "+a)})},function(a){g("failed to create app data soup with error = "+a)})};if(USE_FORCETK===!0){var e={instanceUrl:"http://dummy.dumdum.com"};force.isLoggedIn()?(console.info("forcejs - Already logged in"),c(e)):force.login(function(){console.info("Salesforce login succeeded"),c(e)},function(a){console.info(a),alert("Salesforce login failed")})}else cordova.require("salesforce/plugin/oauth").authenticate(function(a){c(a)},function(a){g("authenticate call failed with error = "+a),$j("#errorMessage").append(a),$j("#retryStartupButton").show(),$j.mobile.loading("hide")})}else $j("#errorMessage").text("Device must be online to install MobileCaddy"),$j("#retryStartupButton").show(),$j.mobile.loading("hide");else{var j=mobileCaddy.require("mobileCaddy/startup");j.startup(a)}},function(a){g("newInstall check error = "+a)})},chooseLanguage:function(){c(),SupportMc.singleton.startUp()},selectLanguage:function(){var a=$j("#languageList li").size();g("language list length = "+a),0===a?(g("Setting up list"),$j.each(LangMc.constants.languageList,function(a,b){var c=decodeURIComponent(b.codedDesc);$j("<li></li>").hide().append('<a href="#" onclick="SupportMc.singleton.displaySelectedLanguage(\''+b.isoCode+'\');"><img src="images/'+b.isoCode+'.png" alt="'+c+'" class="ui-li-icon">'+c+"</a>").appendTo("#languageList").show()})):g("List already created"),$j.mobile.changePage("#languagePage")},displaySelectedLanguage:function(a){SupportMc.variables.chosenLanguage=a,$j.mobile.changePage("#splashPage");var b=!1;$j("#languageButton").empty(),$j.each(LangMc.constants.languageList,function(c,d){if(d.isoCode==a){var e=decodeURIComponent(d.codedDesc);return $j("#languageButton").append('<a class="pad-button" id="lang=button" href="#" data-iconpos="right" data-icon="'+a+'" data-role="button" onclick="SupportMc.singleton.selectLanguage();">'+e+"</a>").trigger("create"),b=!0,!1}}),b||(g("Language not found so defaulting to English"),$j("#selectedLanguage").append('<a href="#" data-iconpos="right" data-icon="en" data-role="button" onclick="SupportMc.singleton.selectLanguage();">English</a>').trigger("create"))}}}();